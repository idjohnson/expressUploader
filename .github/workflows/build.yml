name: Build and Push Docker Image to GHCR

on:
  push:
    branches:
      - main
  workflow_dispatch:


jobs:
  build:
    permissions: write-all
    runs-on: ubuntu-latest

    steps:
      - name: 'Checkout GitHub Action'
        uses: actions/checkout@main

      - name: 'Login to GitHub Container Registry'
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{github.actor}}
          password: ${{secrets.GITHUB_TOKEN}}

      - name: 'Build and Push Image'
        run: |
          docker build . --tag ghcr.io/${{github.actor}}/expressupload:latest
          docker push ghcr.io/${{github.actor}}/expressupload:latest

      - name: 'Build and Push Image'
        run: |
          docker build . --tag ghcr.io/${{github.actor}}/expressupload:latest
          docker push ghcr.io/${{github.actor}}/expressupload:latest

      - name: 'Set Image SHA0'
        run: |
          CONTAINERSHA=`docker images --no-trunc --quiet ghcr.io/${{github.actor}}/expressupload:latest`
          echo "CONTAINERSHA=$CONTAINERSHA" >> $GITHUB_OUTPUT
        id: consha0

      - name: 'Set Image SHA'
        run: |
          CONTAINERSHA=$(docker inspect -f '{{.Id}}' ghcr.io/${{github.actor}}/expressupload:latest)
          echo "CONTAINERSHA=$CONTAINERSHA" >> $GITHUB_OUTPUT
        id: consha1

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ghcr.io/${{github.actor}}/expressupload:latest
          subject-digest: ${{ steps.consha1.outputs.CONTAINERSHA }}
          push-to-registry: true

      - name: 'Helm package and push'
        run: |
          helm package ./helm/
          export HELM_EXPERIMENTAL_OCI=1
          helm push expressupload-*.tgz oci://ghcr.io/${{github.actor}}/

      - name: Attest Build Provenance
        uses: actions/attest-build-provenance@897ed5eab6ed058a474202017ada7f40bfa52940 # v1.0.0
        with:
           subject-path: "expressupload-0.1.0.tgz"

  validate:
    runs-on: ubuntu-latest
    needs: build
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: 'Fetch Chart'
        run: |
          export HELM_EXPERIMENTAL_OCI=1
          helm pull oci://ghcr.io/${{github.actor}}/expressupload --version 0.1.0

      - name: 'Validate'
        run: |
          set -x
          ls -l
          gh attestation verify ./expressupload-0.1.0.tgz -o idjohnson

      - name: 'Validate2'
        run: |
          set -x
          ls -l
          gh attestation verify ./expressupload-0.1.0.tgz -R idjohnson/expressUploader


